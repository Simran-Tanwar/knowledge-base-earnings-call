from functions import knowledge_base
import openai
import os
import requests
from get_transcript import get_transcript
import pandas as pd
from openpyxl import load_workbook
from llama_index import StorageContext, load_index_from_storage

knowledge_base = knowledge_base()
get_transcript = get_transcript()

openai.api_key = "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"
os.environ["OPENAI_API_KEY"] = "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"

company_name = input("Company name:")

storage_context = StorageContext.from_defaults(persist_dir="./storage")
index = load_index_from_storage(storage_context)

ticker_symbol = get_transcript.get_ticker_symbol(company_name)
#print(ticker_symbol)

file_path = 'D:/college_stuff/Intern_Aviso/Knowlegde_base_earnings_call/Companies.xlsx'
df = pd.read_excel(file_path, sheet_name="Sheet1")
company_names = df["Company"].tolist()
ticker_sym = df["Ticker Symbol"].tolist()

if company_name not in company_names:
    new_company = pd.DataFrame({'Company': [company_name], 'Ticker Symbol': [ticker_symbol]})

    df = pd.concat([df, new_company], ignore_index=True)

    df.to_excel('Companies.xlsx', index=False)

    df = pd.read_excel(file_path, sheet_name="Sheet1")

    company_names = df["Company"].tolist()
    ticker_sym = df["Ticker Symbol"].tolist()

else:
    pass

folder_path = "D:/college_stuff/Intern_Aviso/Knowlegde_base_earnings_call/transcript"
transcript = knowledge_base.get_transcript(company_name,folder_path)

docs = knowledge_base.load_docs(folder_path)
data = knowledge_base.data(company_names,docs,ticker_sym)

doc = knowledge_base.read_docs(transcript)[0]
doc.doc_id = "EC_"+data[company_name]["ticker_symbol"]+"_"+company_name
doc.metadata = {"Ticker Symbol":data[company_name]["ticker_symbol"]}

index.insert(doc)
index.storage_context.persist("./storage")

query_engine = index.as_query_engine()
qs = ['What was the total revenue of {} for this quarter?',
      'How has the revenue growth rate changed compared to the previous period of the {}?',
      'Which product or market segments contributed the most to the overall revenue of the {}?']
company_qs = []
response = []
for q in qs:
    company_qs.append(q.format(company_name))
for i in range(0, len(company_qs)):
    response.append(query_engine.query(company_qs[i]))

if company_name not in company_names:
    result_path = 'D:/college_stuff/Intern_Aviso/Knowlegde_base_earnings_call/final_results.xlsx'
    df_result = pd.read_excel(result_path, sheet_name="Sheet1")
    print(df_result)
    response_arr = []
    for i, resp in enumerate(response):
        response_dict = {
            "Company Name": company_name,
            "Ticker symbol": data[company_name]["ticker_symbol"],
           "Query": company_qs[i],
            "Response": resp
        }
        response_arr.append(response_dict)
    print(response_arr)
    new_company_result = pd.DataFrame(response_arr)
    print(new_company_result)
    df_result = pd.concat([df_result, new_company_result], ignore_index=True)
    print(df_result)
    df_result.to_excel('final_results.xlsx',sheet_name='Sheet1', index = False)

else:
    pass